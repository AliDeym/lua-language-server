[hammer]
type = 'table'
[[.source]]
type = 'global'
``````````
type = 'library'
name = 'hammer'

<default>
type = 'function'
parent = {
	1 = {
		type = 'global',
		name = 'hammer'
	},
	2 = {
		type = 'library',
		name = 'hammer'
	}
}

[SendCommand]
description = 'Sends command to Hammer, if Hammer is running with the current map loaded.\r\n\r\n**Returns:** Returns "ok" if command succeeded otherwise returns "badcommand"\r\n\r\n**All changes only happen in hammer, there is *NO* in game representation/feedback**\r\n\r\n**Scope:** Server'
[[.args]]
name = 'cmd'
type = 'string'
description = 'Command to send including arguments\r\n\r\nAll commands are in the format "command var1 var2 etc"\r\n\r\nAll commands that pick an entity with x y z , must use the exact position including decimals. i.e. -354.4523 123.4\r\n\r\n# List of commands\r\n| Command       | Description   |\r\n| ------------- | ------------- |\r\n| "session_begin mapName mapVersion" | Starts a hammer edit, locking the editor. mapName is the current map without path or suffix, mapVersion is the current version in the .vmf file |\r\n| "session_end" | Ends a hammer edit, unlocking the editor. |\r\n| "map_check_version mapName mapVersion" | This only works after session_begin, so you\'d know the right version already and this only returns ok, this function is apparently useless. |\r\n| "entity_create entityClass x y z" | Creates an entity of entityClass at position x y z |\r\n| "entity_delete entityClass x y z" | Deletes an entity of entityClass at position x y z |\r\n| "entity_set_keyvalue entityClass x y z "key" "value"" | Set\'s the KeyValue pair of an entity of entityClass at x y z. The Key name and Value String must be in quotes. |\r\n| "entity_rotate_incremental entityClass x y z incX incY incZ" | Rotates an entity of entityClass at x y z by incX incY incZ |\r\n| "node_create nodeClass nodeID x y z" | Creates an AI node of nodeClass with nodeID at x y z you should keep nodeID unique or you will have issues |\r\n| "node_delete nodeID" | Deletes node(s) with nodeID, this will delete multiple nodes if they have the same nodeID |\r\n| "nodelink_create startNodeID endNodeID" | Creates a link between AI nodes startNodeID and endNodeID |\r\n| "nodelink_delete startNodeID endNodeID" | Removes a link between AI nodes startNodeID and endNodeID |'
[[.returns]]
type = 'string'

